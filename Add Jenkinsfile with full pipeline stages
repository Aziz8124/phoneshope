pipeline {
    agent any

    tools {
        maven 'Maven_3.8.8'
        jdk 'Java_17'
    }

    environment {
        MAIL_RECIPIENT = "azoz.sh2003@gmail.com"
        SONARQUBE_ENV = 'MySonarQube'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Aziz8124/phoneshope.git',
                    credentialsId: 'GITHUB_CREDENTIALS_ID'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                bat 'mvn clean package -DskipTests'
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                bat 'mvn test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube Scan...'
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    bat 'mvn sonar:sonar -Dsonar.projectKey=phoneshope -Dsonar.projectName="PhoneShope"'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Run Application') {
            steps {
                echo 'Starting PhoneShope app in background...'
                bat "start /B mvn spring-boot:run"
                sleep(time: 20, unit: 'SECONDS')
            }
        }

        stage('DAST - OWASP ZAP Scan') {
            steps {
                echo 'Running OWASP ZAP DAST scan...'

                // تشغيل ZAP
                startZap(
                    zapHome: 'C:/ZAP',
                    port: 8090,
                    host: '127.0.0.1',
                    timeout: 120,
                    allowedHosts: ['.*'],
                    sessionPath: '',
                    externalZap: false,
                    rootCaFile: '',
                    additionalConfigurations: []
                )

                // Spider
                runZapCrawler(
                    host: 'http://localhost:8080',
                    maxChildren: 10,
                    recurse: true
                )

                // Active Scan
                runZapAttack(
                    host: 'http://localhost:8080',
                    recurse: true
                )

                // حفظ التقرير
                archiveZap(
                    failAllAlerts: 0,
                    keepAlive: false
                )

                // وقف ZAP
                stopZap()
            }
        }

        stage('Stop Application') {
            steps {
                echo 'Stopping PhoneShope app...'
                bat 'taskkill /F /IM java.exe || exit 0'
            }
        }
    }

    post {
        success {
            echo 'Build successful!'
            mail to: "${MAIL_RECIPIENT}",
                 subject: "Jenkins Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Good news! The build was successful.\nCheck console output at: ${env.BUILD_URL}"
        }
        failure {
            echo 'Build failed!'
            mail to: "${MAIL_RECIPIENT}",
                 subject: "Jenkins Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Build failed. Please check the console output at: ${env.BUILD_URL}"
        }
    }
}
