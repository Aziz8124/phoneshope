pipeline {
    agent any

    environment {
        MAVEN_HOME = 'Maven_3.8.8' // اسم الـ Maven tool في Jenkins
        JAVA_HOME = 'JDK_17'       // اسم الـ JDK tool في Jenkins
        ZAP_PORT = '8099'
    }

    stages {

        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                bat '"%MAVEN_HOME%\\bin\\mvn" clean package'
            }
        }

        stage('Start ZAP') {
            steps {
                echo 'Starting ZAP DAST scanner...'
                bat """
                docker run -d -u zap -p %ZAP_PORT%:%ZAP_PORT% ghcr.io/zaproxy/zaproxy:stable zap.sh -daemon -port %ZAP_PORT% -host 0.0.0.0 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
                """
                echo 'Waiting 15 seconds for ZAP to initialize...'
                // الانتظار بطريقة متوافقة مع Windows
                bat 'timeout /t 15 /nobreak >nul'
            }
        }

        stage('DAST Security Scan') {
            steps {
                echo 'Running DAST Security Scan...'
                // هنا يمكنك إضافة أوامر تشغيل scan على التطبيق المستهدف
                // مثال: bat "docker exec <zap_container_id> zap-cli quick-scan --self-contained -r http://localhost:8080"
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                bat '"%MAVEN_HOME%\\bin\\mvn" test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube analysis...'
                // bat 'mvn sonar:sonar ...'  أضف إعدادات SonarQube حسب الحاجة
            }
        }

        stage('Quality Gate') {
            steps {
                echo 'Checking Quality Gate...'
                // bat 'mvn sonar:qualitygate' أو أي أمر آخر
            }
        }
    }

    post {
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed!'
            // يمكن إضافة mail step لإرسال تنبيه
        }
    }
}
