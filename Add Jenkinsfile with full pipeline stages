pipeline {
    agent any

    tools {
        maven 'Maven_3.8.8'  
        jdk 'Java_17'        
    }

    environment {
        MAIL_RECIPIENT = "azoz.sh2003@gmail.com"
        SONARQUBE_ENV = 'MySonarQube' 
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Aziz8124/phoneshope.git',
                    credentialsId: 'GITHUB_CREDENTIALS_ID'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                bat 'mvn clean package'
            }
        }

        stage('Test') {
            steps {
                echo 'Running tests...'
                bat 'mvn test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'Running SonarQube Scan...'
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    bat 'mvn sonar:sonar -Dsonar.projectKey=phoneshope -Dsonar.projectName="PhoneShope"'
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('DAST - OWASP ZAP Scan') {
            steps {
                echo 'Running OWASP ZAP DAST scan...'
                // مثال: افترض التطبيق شغال على http://localhost:8080
                zapAttackScan zapHome: '/path/to/zap',  // مسار ZAP على السيرفر
                              target: 'http://localhost:8080',
                              sessionPath: '',
                              sessionProperties: '',
                              reportTitle: 'PhoneShope ZAP Report',
                              reportDir: 'zap-reports',
                              reportFile: 'zap_report.html'
            }
        }
    }

    post {
        success {
            echo 'Build successful!'
            mail to: "${MAIL_RECIPIENT}",
                 subject: "Jenkins Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Good news! The build was successful.\nCheck console output at: ${env.BUILD_URL}"
        }
        failure {
            echo 'Build failed!'
            mail to: "${MAIL_RECIPIENT}",
                 subject: "Jenkins Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "Build failed. Please check the console output at: ${env.BUILD_URL}"
        }
    }
}
