pipeline {
    agent any

    environment {
        // أي متغيرات عامة ممكن تحتاجها
        ZAP_PORT = '8099'
        MAVEN_TOOL = 'Maven 3.8.8' // تأكد أن الاسم مطابق لتعريفك في Jenkins
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    def mvnHome = tool name: "${MAVEN_TOOL}", type: 'maven'
                    echo "Building the project using Maven..."
                    bat "${mvnHome}\\bin\\mvn clean package"
                }
            }
        }

        stage('Start ZAP') {
            steps {
                echo "Starting ZAP DAST scanner..."
                // تأكد أن Docker يعمل على النظام
                bat "docker run -d -u zap -p ${ZAP_PORT}:${ZAP_PORT} ghcr.io/zaproxy/zaproxy:stable zap.sh -daemon -port ${ZAP_PORT} -host 0.0.0.0 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true"
                
                echo "Waiting 15 seconds for ZAP to initialize..."
                bat "timeout /t 15 /nobreak"
            }
        }

        stage('DAST Security Scan') {
            steps {
                echo "Running DAST scan with ZAP..."
                // هنا ممكن تضيف أوامر الـ ZAP scan حسب حاجتك
            }
        }

        stage('Test') {
            steps {
                echo "Running tests..."
                // إذا عندك أي أوامر لتشغيل الاختبارات
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo "Running SonarQube analysis..."
                // أضف هنا أوامر SonarQube scanner إذا عندك
            }
        }

        stage('Quality Gate') {
            steps {
                echo "Checking Quality Gate..."
                // أضف هنا خطوات التحقق من Quality Gate
            }
        }
    }

    post {
        success {
            echo 'Build and DAST scan completed successfully!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
